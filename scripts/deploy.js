const { ethers } = require("hardhat");

async function main() {
  console.log("üöÄ ÂºÄÂßãÈÉ®ÁΩ≤ MiniBank ÂêàÁ∫¶...");

  // Ëé∑ÂèñÈÉ®ÁΩ≤ËÄÖË¥¶Êà∑
  const [deployer] = await ethers.getSigners();
  console.log("üìù ÈÉ®ÁΩ≤Ë¥¶Êà∑:", deployer.address);
  
  // Ëé∑ÂèñË¥¶Êà∑‰ΩôÈ¢ù
  const balance = await ethers.provider.getBalance(deployer.address);
  console.log("üí∞ Ë¥¶Êà∑‰ΩôÈ¢ù:", ethers.formatEther(balance), "ETH");

  // Ëé∑ÂèñÂêàÁ∫¶Â∑•ÂéÇ
  const MiniBank = await ethers.getContractFactory("MiniBank");
  
  // ÈÉ®ÁΩ≤ÂêàÁ∫¶
  console.log("‚è≥ Ê≠£Âú®ÈÉ®ÁΩ≤ÂêàÁ∫¶...");
  const miniBank = await MiniBank.deploy();
  
  // Á≠âÂæÖÈÉ®ÁΩ≤ÂÆåÊàê
  await miniBank.waitForDeployment();
  const contractAddress = await miniBank.getAddress();
  
  console.log("‚úÖ MiniBank ÂêàÁ∫¶ÈÉ®ÁΩ≤ÊàêÂäü!");
  console.log("üìç ÂêàÁ∫¶Âú∞ÂùÄ:", contractAddress);
  
  // È™åËØÅÂêàÁ∫¶ÂàùÂßãÁä∂ÊÄÅ
  console.log("\nüìä ÂêàÁ∫¶ÂàùÂßãÁä∂ÊÄÅ:");
  console.log("- Âà©Áéá:", await miniBank.INTEREST_RATE(), "%");
  console.log("- ÊúÄÂ∞èÂ≠òÊ¨æ:", ethers.formatEther(await miniBank.MIN_DEPOSIT()), "ETH");
  console.log("- ÊÄªÁî®Êà∑Êï∞:", await miniBank.totalUsers());
  console.log("- ÊÄªÂ≠òÊ¨æ:", ethers.formatEther(await miniBank.totalSupply()), "ETH");

  // ‰øùÂ≠òÈÉ®ÁΩ≤‰ø°ÊÅØ
  const deploymentInfo = {
    contractAddress: contractAddress,
    deployer: deployer.address,
    network: hardhat.network.name,
    blockNumber: await ethers.provider.getBlockNumber(),
    timestamp: new Date().toISOString()
  };
  
  console.log("\nüìã ÈÉ®ÁΩ≤‰ø°ÊÅØ:");
  console.log(JSON.stringify(deploymentInfo, null, 2));
  
  return contractAddress;
}

// Â¶ÇÊûúÁõ¥Êé•ËøêË°åÊ≠§ËÑöÊú¨ÔºåÂàôÊâßË°åmainÂáΩÊï∞
if (require.main === module) {
  main()
    .then(() => process.exit(0))
    .catch((error) => {
      console.error("‚ùå ÈÉ®ÁΩ≤Â§±Ë¥•:", error);
      process.exit(1);
    });
}

module.exports = { main }; 